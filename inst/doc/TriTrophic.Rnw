\documentclass[11pt]{article}
\usepackage[top=3cm, bottom=3cm, left=2cm, right=2cm]{geometry} % Page margins
\usepackage[utf8]{inputenc}
\usepackage{amsmath}            % /eqref
\usepackage[authoryear,round]{natbib}
\usepackage{booktabs}           % Some macros to improve tables

%\VignetteIndexEntry{Tri-trophic statistics}
%\VignetteKeyword{food web,body mass,numerical abundance,community,allometry}

\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\R}{\textsf{R} }

\begin{document}

\title{Tri-trophic statistics
       (\Sexpr{packageDescription('cheddar', fields='Version')})}
\author{Lawrence Hudson}
\date{\Sexpr{packageDescription('cheddar', fields='Date')}}
\maketitle

\tableofcontents

<<echo=FALSE>>=
options(warn=2)

library(cheddar)

# Makes copy-paste much less painful
options(continue=' ')
options(width=90)
options(prompt='> ')

options(SweaveHooks = list(fig=function() par(mgp=c(2.5,1,0), 
                                              mar=c(4,4,2,1),
                                              oma=c(0,0,1,0),
                                              cex.main=0.8)))
@

\section{Introduction}
\cite{CohenEtAl2009PNAS} proposed a novel analysis that 
simultaneously considers body mass, $M$, numerical abundance, $N$, and the 
community's food web. Cheddar supports this analysis, described in this 
vignette. You should read the `Community' vignette before reading this one.

The Cheddar function \code{NvMTriTrophicStatistics} is essentially 
`\cite{CohenEtAl2009PNAS} in a can'. 
It takes a single community as its only parameter. Cannibalistic links and all 
nodes with an $N$ or $M$ of \code{NA} are removed before statistics are 
computed. It returns a list containing three matrices: `links', 
`three.node.chains' and `trophic.chains'. The examples in this vignette show 
how to use this function and the three matrices that it returns to reconstruct 
the important figures and tables from \cite{CohenEtAl2009PNAS}. 

\subsection{\cite{CohenEtAl2009PNAS}, Table 1 (p 22338)}
This code removes isolated nodes from communities for consistency with the 
paper. \code{NvMTriTrophicStatistics} does this for us anyway so the 
$M$ - $N$ tritrophic statistics are not affected but the network statistics in 
the last four rows of the table would be different to those in the paper. 
<<>>=
data(TL84, TL86, YthanEstuary)
res <- lapply(list(TL84, TL86, YthanEstuary), function(community)
{
    community <- RemoveNodes(community, remove=with(NPS(community), node[is.na(M) | is.na(N)]))
    community <- RemoveCannibalisticLinks(community)
    community <- RemoveIsolatedNodes(community)

    tts<-NvMTriTrophicStatistics(community)
    lp <- tts[['links']]
    tncp <- tts[['three.node.chains']]
    tcp <- tts[['trophic.chains']]
    
    community.span <- diff(range(Log10M(community))) +
                      diff(range(Log10N(community)))
                      
    wiggling <- mean(tcp$sum.chain.length) / mean(tcp$chain.span)

    UnsafeMean <- function(x)
    {
        ifelse(is.null(x), NA, mean(x))
    }

    return (c(
         'Mean link length'=mean(lp$length),
         'Mean L upper'=UnsafeMean(tncp$Lupper),
         'Mean L lower'=UnsafeMean(tncp$Llower),
         '2 x mean link length'=2*mean(lp$length),
         'Mean 2-span'=UnsafeMean(tncp$two.span),
         'Mean L upper + L lower'=UnsafeMean(tncp$Lupper + tncp$Llower),
         '2 x mean link length / mean 2-span'=2 * mean(lp$length) / UnsafeMean(tncp$two.span),
         'Mean L upper + L lower/ mean 2-span'=UnsafeMean(tncp$Lupper + tncp$Llower) / UnsafeMean(tncp$two.span),
         'Mean count chain length'=mean(tcp$count.chain.length),
         'Mean count chain length x mean link length'=mean(tcp$count.chain.length)*mean(lp$length),
         'Community span'=community.span,
         'Mean count chain length x mean link length / community span'=mean(tcp$count.chain.length)*mean(lp$length)/community.span,
         'Mean sum chain lengths'=mean(tcp$sum.chain.length),
         'Mean chain span'=mean(tcp$chain.span),
         'Mean chain span / community span'=mean(tcp$chain.span) / community.span,
         'Mean sum chain lengths / mean chain span'=mean(tcp$sum.chain.length) / mean(tcp$chain.span),
         'Mean sum chain lengths / community span'=mean(tcp$sum.chain.length) / community.span,
         'L'=NumberOfTrophicLinks(community),
         'S^2'=NumberOfNodes(community)^2,
         'L/S^2'=DirectedConnectance(community),
         'L/S'=LinkageDensity(community)))
})
res <- do.call('cbind', res)

colnames(res) <- c('TL84', 'TL86', 'Ythan Estuary')
print(round(res,2))
@

\subsection{\cite{CohenEtAl2009PNAS}, Table S3 p 8}
<<>>=
res <- lapply(list(TL84, TL86, YthanEstuary), function(community)
{
    community <- RemoveNodes(community, remove=with(NPS(community), node[is.na(M) | is.na(N)]))
    community <- RemoveCannibalisticLinks(community)
    community <- RemoveIsolatedNodes(community)

    chains <- ThreeNodeChains(community, node.properties='M')
    MR <- chains$bottom.M
    MI <- chains$intermediate.M
    MC <- chains$top.M

    lp <- TLPS(community, node.properties='M')

    return (c('MR<=MI<=MC'=sum(MR<=MI & MI<=MC), 
              'MR<=MC<MI'=sum(MR<=MC & MC<MI), 
              'MI<MR<=MC'=sum(MI<MR  & MR<=MC), 
              'MI<=MC<MR'=sum(MI<=MC & MC<MR), 
              'MC<MR<MI'=sum(MC<MR  & MR<MI), 
              'MC<MI<MR'=sum(MC<MI  & MI<MR), 
              'All 2-chains'=nrow(chains),
              'MR<MC'=sum(lp$resource.M<lp$consumer.M), 
              'MR=MC'=sum(lp$resource.M==lp$consumer.M), 
              'MR>MC'=sum(lp$resource.M>lp$consumer.M), 
              'All links'=nrow(lp)))
})
res <- do.call('cbind', res)

colnames(res) <- c('TL84', 'TL86', 'Ythan Estuary')
print(round(res,2))
@

\subsection{\cite{CohenEtAl2009PNAS}, Fig. 1 p 22336}

\begin{center}
<<fig=TRUE, echo=TRUE>>=
data(TL84, TL86, YthanEstuary)
par(mfrow=c(3,2))
for(community in list(TL84, TL86, YthanEstuary))
{
    PlotNvM(community)
    PlotAuppervAlower(community)
}
@
\end{center}

\bibliographystyle{plainnat}
\bibliography{cheddar} 

\end{document}

